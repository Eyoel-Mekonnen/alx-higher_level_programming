============================================================================
# This function divides all elements of a 2D matrix and returns a new matrix
# Example
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]] 
 
The original matrix is left unchanged
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

Matices that are not valid
==========================

matrix must be a list of list of integers or floats, otherwise raise TypeError

>>> matrix = "None"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = none
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

If it an empty list of list nothing will happen

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

if it is a list but not a list of list

>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

If the elements of the list are not either int or float

>>> matrix = [
...     [1, 2, 3],
...     [4, "Hello", 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

If the rows are not all consistent

If Divisior is a non number

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "hello"))
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, Nothing)
Traceback (most recent call last):
    ...
TypeError: div must be a number

If divisior is Zero

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
